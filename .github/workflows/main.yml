name: CI/CD Pipeline

on:
  push:
    branches: [ main ]  # Adjust if needed

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: phase_3_imdb
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgpgme-dev libgpg-error-dev pkg-config
          # Debug: check if gpgme-config exists
          which gpgme-config || true
          gpgme-config --version || true

      - name: Stub gpgme-config if not found
        run: |
          if ! command -v gpgme-config > /dev/null; then
            echo "Creating stub for gpgme-config..."
            sudo tee /usr/local/bin/gpgme-config << 'EOF'
#!/bin/bash
if [ "$1" == "--version" ]; then
  echo "1.18.0"
elif [ "$1" == "--cflags" ]; then
  echo "-I/usr/include/gpgme"
elif [ "$1" == "--libs" ]; then
  echo "-lgpgme"
else
  echo ""
fi
EOF
            sudo chmod +x /usr/local/bin/gpgme-config
          fi
          echo "Using gpgme-config at: $(which gpgme-config)"
          gpgme-config --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          # Replace with your actual test command, e.g.:
          echo "Running tests..."
          # pytest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/ec2-user/your-project   # Adjust to match the directory where your app is deployed on EC2
            git pull origin main
            pkill -f "python3 app.py" || true
            nohup python3 app.py > app.log 2>&1 &
